#!/usr/bin/python2.7
import os
import time
import socket
from threading import Thread
from py_hosted import config, node
from py_clock import update_time, determine_now
from py_guidebook import update_guidebook_data, send_update

service_version = "0.1.0"

config.restart_on_update()
sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
IP_PORT = ("127.0.0.1", 4444)

if config.guidebook_api_key != "":
    guidebook_api_key = config.guidebook_api_key
else:
    guidebook_api_key = os.getenv("GUIDEBOOK_API_KEY", "")


def update_time_thread():
    while True:
        try:
            now = determine_now(config.debug_datetime)
            update_time(node, now)
        except Exception as e:
            pass

        time.sleep(1)


def update_guidebook_thread():
    while True:
        try:
            now = determine_now(config.debug_datetime)
            update_guidebook_data(
                node,
                guidebook_api_key,
                config.guidebook_guide_id,
                now
            )
        except Exception as e:
            node.send_json("/guidebook/update", {"status": "failed-unexpected"})
            send_update(node, "failed", 99, "Unexpected failure", e)

        time.sleep(60)


threads = [
    (update_time_thread, 1),
    (update_guidebook_thread, 60),
]

for fn, sleep_time in threads:
    t = Thread(target=fn)
    t.daemon = True
    t.start()


while True:
    pass
